{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/account.service.ts","webpack:///./src/app/core/api.service.ts","webpack:///./src/app/core/clientnotification.service.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/core.service.ts","webpack:///./src/app/core/document.service.ts","webpack:///./src/app/core/global.service.ts","webpack:///./src/app/core/information.service.ts","webpack:///./src/app/core/menu.service.ts","webpack:///./src/app/core/models/InvestmentAccount.model.ts","webpack:///./src/app/core/models/advisor.model.ts","webpack:///./src/app/core/models/client.model.ts","webpack:///./src/app/core/models/clientnotifications.model.ts","webpack:///./src/app/core/models/menu-params.model.ts","webpack:///./src/app/features/features.module.ts","webpack:///./src/app/features/home/home.component.html","webpack:///./src/app/features/home/home.component.ts","webpack:///./src/app/frame/menu/menu.component.html","webpack:///./src/app/frame/menu/menu.component.ts","webpack:///./src/app/route/route-routing.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<app-menu (change)=\"routeChange($event)\" [ngClass]=\"menuServ.showMenu == true ?  'appMenuShow' : 'appMenuHide' \"></app-menu>\n<div id=\"header\" class=\"ui-header-fixed ui-bar-b\" style=\"clear:both;font-family:Georgia !important;\">\n    <div style=\"display:inline;float:left;width:15%;\">\n        <label class=\"ui-btn\" style=\"height:100%;background-color:#1d1d1d;\">\n            <a (click)=\"toggleMenu()\" class=\"ico_toggle\" rel=\"external\" style=\"clear:both;float:left\"></a>\n            <span class=\"smallText\"></span>\n        </label>\n        <br />\n    </div>\n    <div style=\"display:inline;float:left;width:70%;\">\n        <label class=\"ui-btn\" style=\"background-color:#1d1d1d;color:white;text-transform: uppercase;font-family:Georgia !important;\">Generic Base</label>\n        <label class=\"ui-btn\" style=\"background-color:#1d1d1d;color:white;font-size:x-small;padding:0;font-family:Georgia !important;\">ver 1.0.0</label>\n    </div>\n    <div style=\"display:inline;float:left;width:15%;\">\n    </div>\n    <div   style=\"clear:both;height:15px; font-family:Georgia !important;z-index: 9999;background-color: #1d1d1d;color:white;opacity: 0.4\">\n            <span style=\"float:left;font-size:x-small;text-transform: capitalize \" *ngIf=\"menuServ.breadCrumb != ''\"> Navigation : {{menuServ.breadCrumb}} </span>\n    </div>\n</div>\n\n\n<div id=\"panel\" style=\"padding-top:0\" (click)=\"closeMenu()\" >\n    <router-outlet></router-outlet>\n</div>\n\n\n<div id=\"footer\" class=\"ui-footer-fixed ui-bar-b\" style=\"clear:both;height:30px; font-family:Georgia !important;z-index: 9999;\">\n    <div style=\"display:inline;float:left;width:15%;border: solid medium white;height:27px\">\n\n    </div>\n    <div style=\"display:inline;float:left;width:70%;border: solid medium white;height:27px; text-align: center\">\n            &copy;Copyright  \n    </div>\n    <div style=\"display:inline;float:left;width:15%;border: solid medium white;height:27px\">\n            \n    </div>\n</div>","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute, Routes, RouterModule } from '@angular/router';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NgModule } from '@angular/core';\nimport { AccountService } from '../app/core/account.service';\nimport { MenuParams } from './core/models/menu-params.model';\nimport { MenuService } from './core/menu.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n  // animations: [\n  //   trigger('slideInOut', [\n  //     state('in', style({\n  //       transform: 'translate3d(0, 0, 0)'\n  //     })),\n  //     state('out', style({\n  //       transform: 'translate3d(100%, 0, 0)'\n  //     })),\n  //     transition('in => out', animate('400ms ease-in-out')),\n  //     transition('out => in', animate('400ms ease-in-out'))\n  //   ]),\n  // ]\n\n})\n\nexport class AppComponent {\n  title = 'app';\n  //hideAppMenu: string = 'true';\n  menuState: string = 'in';\n  result: any;\n\n  constructor(private router: Router, private route: ActivatedRoute, private accountSV: AccountService, public menuServ: MenuService) {\n\n    // if (accountSV.clientLoggedIn) {\n    //   this.accountSV.MenuItems().then((result) => {\n    //     this.menuServ.menuList = [];\n    //     this.menuServ.menuList = result;\n    //   });\n    // }\n  }\n\n  toggleMenu() {\n    this.menuServ.showMenu = this.menuServ.showMenu === true ? false : true;\n  }\n\n  closeMenu() {\n    this.menuServ.showMenu = false;\n  }\n\n\n\n\n\n  routeChange(event) {\n    setTimeout(() => {\n      this.router.navigate([event]);\n      this.toggleMenu();\n    }, 100);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { CoreModule } from './core/core.module';\n\nimport { RouteRoutingModule } from './route/route-routing.module';\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './frame/menu/menu.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { HomeComponent } from './features/home/home.component';\nimport { AccordionPanelComponent } from './shared/accordion-panel/accordion-panel.component';\nimport { InformationComponent } from './frame/information/information.component';\nimport { RecaptchaModule } from 'ng-recaptcha';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n    ,MenuComponent\n,HomeComponent\n    , InformationComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpModule,\n    CoreModule,\n    RouteRoutingModule,\n    RecaptchaModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { Observable } from 'rxjs';\nimport { Observer } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { MenuParams } from './models/menu-params.model';\nimport { MenuService } from './menu.service'\nimport { Client, ClientDetails } from './models/client.model';\nimport { Http, URLSearchParams, Response, Headers, RequestOptions } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  public clientLoggedIn: boolean = false;\n  public client: Client = new Client();\n  public clientDetails: ClientDetails = new ClientDetails();\n\n\n  public reset() {\n    this.clientLoggedIn = false;\n    this.client = new Client();\n  }\n\n\n  constructor(private api: ApiService, private menuServ: MenuService) { }\n\n  public isAccountLogin(): boolean {\n    return this.clientLoggedIn;\n  }\n\n  public loadClientMenu(cun: string, cpw: string,preValidation:boolean): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.login(cun, cpw,preValidation).then((res) => {\n        this.clientLoggedIn = this.client.isLoggedIn;\n        if (this.client.isLoggedIn) {\n          this.MenuItems().then((result) => {\n            this.menuServ.menuList = [];\n            this.menuServ.menuList = result;\n\n            this.menuServ.showMenu = false;\n            resolve(true);\n          });\n        } else {\n          resolve(true);\n        }\n\n      });\n    })\n\n  }\n\n  private login(cun: string, cpw: string,preValidation:boolean): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.client = new Client();\n      this.api.load('Core/LoginClient', { clientUN: cun, clientPW: cpw }, {\n        success: result => {\n          this.client.ClientName = result.ClientName;\n          this.client.EmailAddress = result.EmailAddress;\n          if (preValidation == false)\n          {\n              this.client.isLoggedIn = result.isLoggedIn;\n          }\n          this.client.PartyID = result.PartyID;\n          this.client.ResultAdvancedMessage = result.ResultAdvancedMessage;\n          this.client.ResultMessage = result.ResultMessage;\n          resolve(true);\n        }\n      });\n    });\n  }\n\n\n  public logOutClient(): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.clientLoggedIn = false;\n      this.menuServ.menuList = [];\n      this.menuServ.showMenu = false;\n      this.client = new Client();\n      resolve(true);\n    });\n  }\n\n\n  public ChangePassword(ClientID: string, nP: string): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.api.load('Core/ChangePassword', { clientID: ClientID, newPassword: nP }, {\n        success: result => {\n          resolve(true);\n        }\n      });\n    });\n  }\n\n\n  public GetClientDetails(ClientID: string): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.clientDetails = new ClientDetails();\n      this.api.load('Core/GetClientDetails', { clientID: ClientID }, {\n        success: result => {\n          this.clientDetails = result;\n          resolve(true);\n        }\n      });\n    });\n  }\n\n\n  public SendClientDetails(ClientID: string, user: ClientDetails): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.api.post('Core/SentPersonalMail', { clientID: ClientID, jsonStr: user }).subscribe(\n        (result) => {\n          resolve(true);\n        });\n    });\n  }\n\n\n  public MenuItems(): Promise<MenuParams[]> {\n    return new Promise<MenuParams[]>((resolve, reject) => {\n      let menuItems: MenuParams[] = [];\n      let param: MenuParams = new MenuParams();\n      this.api.load('Core/GetMenuItems', { partyID: this.client.PartyID, siteColID: 1, useAdmin: false, currentUserID: 1100 }, {\n        success: result => {\n          for (const item of result) {\n            menuItems.push(item);\n          }\n          resolve(menuItems);\n        }\n      });\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, URLSearchParams, Response, Headers, RequestOptions } from '@angular/http';\nimport { map, take,filter, catchError, mergeMap,tap } from 'rxjs/operators';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport 'rxjs/add/observable/throw';\nimport { ApiParams } from './models/api-params.model';\n\nimport {InformationService} from './information.service'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n\n\n  public setSignOutReason: (reason) => void = null;\n  public get busy(): boolean {\n    // console.info('Busy', 'check', this.processCount);\n    return this.processCount > 0;\n  }\n  public isTestMode = false; // Used for AppStore testing\n  private _busy = false;\n  private processCount = 0;\n  constructor (private http: Http, private router: Router,private notify: InformationService) { }\n\n  public get(api: string, payload?: any): Observable<Response> {\n    const options = new RequestOptions({\n      withCredentials: true,\n      headers: new Headers({ 'Content-Type': 'application/json' }),\n      params: payload\n    });\n    this.processCount++;\n    // console.info('Busy', 'inc', 'get', api, this.processCount);\n\n    return this.http.get(this.buildUrl(api),options).pipe(tap(() => this._busy = false),map(data => this.extractData(data)));\n    \n    \n\n\n    //return this.http.get(this.buildUrl(api), options).do(() => this._busy = false).map(r => this.extractData(r)).catch(e => this.handleError(e));\n  }\n  public load(api: string, payload?: any, params?: ApiParams): Subscription {\n    if (!params) {\n      params = {\n        successMessage: null,\n      }\n    }\n    let apiCall;\n    if (params.inBody) {\n      if (!params.successMessage) {\n        params.successMessage = null;\n      }\n      apiCall = this.post(api, params.inBody ? undefined : payload, params.inBody ? payload : undefined);\n    } else {\n      apiCall = this.get(api, payload);\n    }\n    return apiCall.subscribe(\n      data => {\n        if (params.successMessage) {\n          this.notify.success(params.successMessage);\n        }\n        if (params.success) {\n          params.success(data);\n        }\n      },\n      error => {\n        if (params.failMessage !== null) {\n          this.notify.error(params.failMessage || 'An error occurred while loading');\n        }\n        if (params.failure) {\n          params.failure(error);\n        }\n      });\n  }\n  public loadMulti() { } //TODO: Create function that queues multiple functions\n  public post(api: string, payload: any, payloadBody?: any): Observable<Response> {\n    const options = new RequestOptions({\n      headers: new Headers({ 'Content-Type': 'application/json' }),\n      withCredentials: true,\n      params: payload\n    });\n    // if (environment.isCordova) {\n    //   options.headers.append('X-XSRF-TOKEN', this.cookies.get('XSRF-TOKEN'));\n    // }\n\n    this.processCount++;\n    // console.info('Busy', 'inc', 'post', api, this.processCount);\n    //return this.http.post(this.buildUrl(api), payloadBody || {}, options).map(r => this.extractData(r)).catch(e => this.handleError(e));\n\n    //return this.http.post(this.buildUrl(api), payloadBody || {}, options).map(r => this.extractData(r)).catch(e => this.handleError(e));\n\n    return this.http.get(this.buildUrl(api),options).pipe(map(data => this.extractData(data)));\n  }\n  public update(api: string, payload: any, params?: ApiParams): Subscription {\n    if (!params) {\n      params = {};\n    }\n    return this.post(api, params.inBody ? undefined : payload, params.inBody ? payload : undefined).subscribe(\n      data => {\n        if (params.successMessage !== null) {\n          this.notify.success(params.successMessage || 'Successfully saved');\n        }\n        if (params.success) {\n          params.success(data);\n        }\n      },\n      error => {\n        if (params.failMessage !== null) {\n          this.notify.error(params.failMessage || 'An error occurred while saving');\n        }\n        if (params.failure) {\n          params.failure(error);\n        }\n      });\n  }\n  public create(api: string, payload: any, params?: ApiParams): Subscription {\n    if (payload.ID) {\n      payload.ID = undefined;\n    }\n    return this.update(api, payload, params);\n  }\n\n  public download(base64: string, fileName: string, type = 'pdf') {\n    if (!document) {\n      return;\n    }\n\n    const arrBuffer = this.base64ToArrayBuffer(base64);\n    const newBlob = new Blob([arrBuffer], { type: 'application/' + type });\n\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) { // Internet Explorer, oh dear\n      window.navigator.msSaveOrOpenBlob(newBlob, fileName);\n      return;\n    }\n    //if (environment.isCordova) {\n    //  this.files.saveFile(fileName, newBlob);\n    //  return;\n    //}\n\n    const data = window.URL.createObjectURL(newBlob);\n    const link = document.createElement('a');\n    link.style.display = 'none';\n    document.body.appendChild(link); //required in FF, optional for Chrome\n    link.href = data;\n    link.download = fileName;\n    link.click();\n    window.URL.revokeObjectURL(data);\n    link.remove();\n  }\n  base64ToArrayBuffer(data) {\n    const binaryString = window.atob(data);\n    const binaryLen = binaryString.length;\n    const bytes = new Uint8Array(binaryLen);\n    for (let i = 0; i < binaryLen; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n  };\n  private buildUrl(controller: string): string {\n\n    let baseURL = 'http://localhost:5200/api/';\n\n    /* let baseURL = this.config.environment.apiUrl;\n    if (this.isTestMode) {\n      baseURL = 'https://clientinfoservice.citadel.co.za:8200/Staging/api/'; //TODO Remove hardcoding\n    } */\n    return baseURL + controller;\n  }\n  private convertDatesOnSingleObject(item) {\n    const keys = Object.keys(item).filter(name => name.startsWith('Date') || name.endsWith('Date'));\n    // console.info('convertDatesOnSingleObject', 'Start', keys);\n    keys.forEach(key => {\n      const value = item[key];\n      const d = new Date(value);\n      if (d && !isNaN(d.getTime())) {\n        item[key] = d;\n      }\n    });\n    // console.info('convertDatesOnSingleObject', 'End');\n  }\n  private convertDates(data) {\n    if (Array.isArray(data)) {\n      // console.info('convertDates', 'Start', data);\n      (<any[]>data).forEach(item => this.convertDatesOnSingleObject(item));\n      // console.info('convertDates', 'End');\n    } else {\n      this.convertDatesOnSingleObject(data);\n    }\n  }\n  private extractData(res: Response) {\n    this._busy = false;\n    if (this.processCount > 0) {\n      this.processCount--;\n    }\n    const body = res.json();\n    if (body) {\n      const finalData = body.data || body;\n      this.convertDates(finalData);\n      return finalData;\n    } else {\n      return {};\n    }\n  }\n  private handleError(error: Response | any) {\n    let body;\n    this._busy = false;\n    if (this.processCount > 0) {\n      this.processCount--;\n    }\n    // console.info('Busy', 'dec', this.processCount, error);\n    let errMsg: string;\n    if (error instanceof Response) {\n      if (error.status === 0) {\n        //return Observable.throw('Network error');\n       // return Observable.empty<Response>();\n      }\n      if (error.status === 401 && error.url.indexOf('/api/Auth/') === -1) { // Access token is not valid\n        if (this.setSignOutReason) {\n          this.setSignOutReason(error.statusText); // This is used, because the service cannot send routing parameters to a page.\n        }\n        this.router.navigate(['/login']);\n       // return Observable.empty<Response>();\n      }\n      body = error['_body'] ? error.json() : { error: error.statusText };\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg, Response);\n    if (body && body.ErrorMessages && body.ErrorMessages.length) {\n     // return Observable.throw(body.ErrorMessages[0]);\n     // return Observable.empty<Response>();\n    } else {\n      \n      //return Observable.throw(error);\n     // return Observable.empty<Response>();\n    }\n  }\n\n  public clearProcessCount() {\n    this.processCount = 0;\n  }\n\n}\n\nexport { Response, Observable, Subscription, Subject }\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { ClientNotificationModel } from './models/clientnotifications.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientnotificationService {\n\n  public clientNotifications: ClientNotificationModel[] = [];\n\n  public reset() {\n    this.clientNotifications = [];\n  }\n\n  constructor(private apiServ: ApiService) { }\n\n  public getNotifications(ClientID: string, NotificationCategoryL: number, NotificationStatusL: number, NotificationTypeL: number, UseLinkedAccounts: boolean): Promise<ClientNotificationModel[]> {\n    return new Promise<ClientNotificationModel[]>((resolve, reject) => {\n      let resultHTML: string = \"\";\n\n      this.apiServ.load('Notification/getNotifications', { clientID: ClientID, notificationCategoryL: NotificationCategoryL, notificationStatusL: NotificationStatusL, notificationTypeL: NotificationTypeL, useLinkedAccounts: UseLinkedAccounts }, {\n        success: results => {\n          this.clientNotifications = [];\n\n          let notificationModel: ClientNotificationModel = new ClientNotificationModel();\n          for (const item of results) {\n            notificationModel = new ClientNotificationModel();\n            notificationModel.DateSent = item.DateSent;\n            notificationModel.DisclaimerAction = item.DisclaimerAction;\n            notificationModel.DisclaimerActive = item.DisclaimerActive;\n            notificationModel.DisclaimerRequired = item.DisclaimerRequired;\n            notificationModel.Message = item.Message;\n            notificationModel.PartyID = item.PartyID;\n            notificationModel.PartyNotificationCategory = item.PartyNotificationCategory;\n            notificationModel.PartyNotificationCategoryL = item.PartyNotificationCategoryL;\n            notificationModel.PartyNotificationID = item.PartyNotificationID;\n            notificationModel.PartyNotificationStatus = item.PartyNotificationStatus;\n            notificationModel.PartyNotificationStatusL = item.PartyNotificationStatusL;\n            notificationModel.PartyNotificationTypeL = item.PartyNotificationTypeL;\n            notificationModel.RefPartyNotificationBaseID = item.RefPartyNotificationBaseID;\n            notificationModel.RefPartyNotificationID = item.RefPartyNotificationID;\n            notificationModel.RefPartyNotificationLevel = item.RefPartyNotificationLevel;\n            notificationModel.SharedTnCID = item.SharedTnCID;\n            notificationModel.StampDate = item.StampDate;\n            notificationModel.StampStaff = item.StampStaff;\n            notificationModel.StampStaffID = item.StampStaffID;\n            notificationModel.Subject = item.Subject;\n\n            if (item.RefPartyNotificationLevel == 0){\n              notificationModel.AnyChildStatusUnread = false;\n            }\n\n            this.clientNotifications.push(notificationModel);\n          }\n          \n          if (this.clientNotifications.length > 0) {\n            let loopDone:boolean = false;\n            this.clientNotifications.filter((filtItem) => filtItem.RefPartyNotificationLevel == 0).forEach((item) => {\n              loopDone = false;\n              this.clientNotifications.filter((searchItem) => searchItem.RefPartyNotificationLevel > 0 && searchItem.RefPartyNotificationBaseID == item.PartyNotificationID).forEach((subItem, subidx) => {\n                if ((item.PartyNotificationStatusL == 3 || subItem.PartyNotificationStatusL == 3) && loopDone == false ) {\n                  item.AnyChildStatusUnread = true;\n                  loopDone = true;\n                  return;\n                }\n              })\n            });\n          }\n          \n\n\n          resolve(this.clientNotifications);\n\n        }\n      });\n    });\n  }\n\n\n\n\n  public sendNotification(ClientID: string, NotificationCategoryL: number, NotificationSubject: string, NotficationMessage: string, NotificationStatusL: number, NotifyIDGuid: string, AdvisorEmail: boolean, AdvisorSMS: boolean): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      let resultHTML: string = \"\";\n\n      this.apiServ.load('Notification/sendNotification', { \n        clientID: ClientID, \n        notificationCategoryL: NotificationCategoryL, \n        notificationSubject: NotificationSubject, \n        notficationMessage: NotficationMessage, \n        notificationStatusL: NotificationStatusL, \n        notifyIDGuid: NotifyIDGuid, \n        advisorEmail: AdvisorEmail, \n        advisorSMS: AdvisorSMS }, {\n        success: results => {\n          resolve(true);\n        }\n      });\n    });\n  }\n\n\n\n  public requestSecureChat( ClientID:string,  NotificationCategoryL:number,  RequestType:number): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.apiServ.load('Notification/requestSecureChat', { clientID: ClientID, notificationCategoryL: NotificationCategoryL, requestType: RequestType }, {\n        success: results => {\n          resolve(true);\n        }\n      });  \n    });\n  }\n\n  public UpdateNotificationStatus( NotificationID:string,  NotificationTypeL:number, NotificationStatusL:number,AllRefMessages:boolean): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.apiServ.load('Notification/updateNotificationStatus', { notificationID: NotificationID, notificationTypeL: NotificationTypeL, notificationStatusL: NotificationStatusL,allRefMessages:AllRefMessages }, {\n        success: results => {\n          resolve(true);\n        }\n      });  \n    });\n  }\n\n\n\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\nimport {ApiService} from './api.service';\nimport {AccountService} from './account.service';\nimport {InformationService} from './information.service';\nimport {MenuService} from './menu.service';\nimport {CoreService} from './core.service';\nimport {GlobalService} from './global.service';\nimport {ClientnotificationService} from './clientnotification.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [\n    ApiService\n    ,GlobalService\n    ,AccountService\n    ,InformationService\n    ,MenuService\n    ,CoreService\n    ,ClientnotificationService\n  ]\n})\nexport class CoreModule { }\n\nexport {\n  ApiService\n  ,GlobalService\n  ,AccountService\n  ,InformationService\n  ,MenuService\n  ,CoreService\n  ,ClientnotificationService\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Observer } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { AccountService } from './account.service';\nimport { AdvisorModel } from './models/advisor.model';\nimport { LookupModel,ReportCurrencyLookupModel } from './models/lookup.models';\nimport { Client } from './models/client.model';\nimport { InvestmentAccountModel } from './models/InvestmentAccount.model';\nimport {ApiRequestResult} from './models/apiResult.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreService {\n  //https://www.joshmorony.com/adding-captcha-to-ionic-with-nodejs-middleware/\n  public recaptchaSiteKey:string = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\n  \n  public advisor: AdvisorModel = new AdvisorModel();\n  public advisorObj: any;\n  public advisorObjLoaded: boolean = false;\n\n  private activeInvestmentAccountsLoaded: boolean = false;\n  private activeInvestmentAccountsLoadedExternal: boolean = false;\n  public activeInvestmentAccounts: any;\n  public activeInvestmentAccountsExternal: any;\n  public reportCurrencies:ReportCurrencyLookupModel[] = [];\n\n  public reset() {\n    this.advisor = new AdvisorModel();\n    this.advisorObj = null;\n    this.advisorObjLoaded = false;\n    this.activeInvestmentAccounts = null;\n    this.activeInvestmentAccountsExternal = null;\n    this.activeInvestmentAccountsLoaded = false;\n    this.activeInvestmentAccountsLoadedExternal = false;\n    this.reportCurrencies = [];\n  }\n\n  constructor(public api: ApiService, public account: AccountService) { }\n\n  public getHtmlPart(htmlKey: string): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      let resultHTML: string = \"\";\n      this.api.load('Core/GetHtmlPart', { htmlPartKey: htmlKey }, {\n        success: result => {\n          resultHTML = result;\n\n          resolve(resultHTML);\n        }\n      });\n    })\n  }\n\n  public getAdvisor(): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this.advisor.ID == \"\") {\n        this.api.load('Core/GetAdvisorData', { clientID: this.account.client.PartyID }, {\n          success: results => {\n            let advisorModel: AdvisorModel = new AdvisorModel();\n            for (const item of results) {\n              this.advisor.ID = item.ID;\n              this.advisor.PrimaryContact = item.PrimaryContact;\n              this.advisor.Sharewith = item.Sharewith;\n            }\n            resolve(true);\n          }\n        })\n      } else {\n        resolve(true);\n      }\n    })\n  }\n\n  public getAdvisorObj(): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this.advisorObjLoaded == false) {\n        let resultHTML: string = \"\";\n        this.api.load('Core/GetAdvisorObj', { sid: this.advisor.ID }, {\n          success: result => {\n            this.advisorObj = result;\n            this.advisorObjLoaded = true;\n            resolve(true);\n          }\n        })\n      } else {\n        resolve(true);\n      }\n    })\n  }\n\n  public GetLookup(TableName: string, alreadyLoaded: boolean): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (alreadyLoaded == false) {\n        this.api.load('Core/GetLookup', { tableName: TableName }, {\n          success: result => {\n\n            let lookupList: LookupModel[] = [];\n            lookupList = result;\n\n            resolve(lookupList.sort((a, b) => {\n              if (a.ID > b.ID) {\n                return 1;\n              } else {\n                return -1;\n              };\n            }));\n          }\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  public GetReportCurrencies(): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this.reportCurrencies.length <= 0) {\n        this.api.load('Core/GetReportCurrencies',{}, {\n          success: result => {\n\n            let lookupList: ReportCurrencyLookupModel[] = [];\n            lookupList = result;\n            this.reportCurrencies = lookupList.sort((a, b) => {\n              if (a.LID > b.LID) {\n                return 1;\n              } else {\n                return -1;\n              };\n            });\n\n            resolve(true);\n          }\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  public getActiveInvestmentClients(option: number): Client[] {\n    let clients: Client[] = [];\n\n    if (option == 1) {\n      clients = this.activeInvestmentAccountsExternal.Table;\n    } else if (option == 2) {\n      clients = JSON.parse(JSON.stringify(this.activeInvestmentAccounts.Table));\n    } else if (option == 3) {\n      let clientsArray1: Client[] = [];\n      let clientsArray2: Client[] = [];\n\n      clientsArray1 = JSON.parse(JSON.stringify(this.activeInvestmentAccountsExternal.Table));\n      clientsArray2 = JSON.parse(JSON.stringify(this.activeInvestmentAccounts.Table));\n\n      //Get distinct items from both lists\n      for (var i = 0; i < clientsArray1.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < clientsArray2.length; j++) { // j < is missed;\n          if (clientsArray1[i].ClientName == clientsArray2[j].ClientName) {\n            found = true;\n            break;\n          }\n        }\n        if (found == false) {\n          clientsArray2.push(clientsArray1[i]);\n        }\n      }\n\n      clients = clientsArray2;\n    }else if (option == 4) {\n      clients = JSON.parse(JSON.stringify(this.activeInvestmentAccounts.Table));\n    }\n\n    return clients;\n  }\n\n\n  public getActiveInvestmentAccounts(option: number): InvestmentAccountModel[] {\n    let clients: InvestmentAccountModel[] = [];\n\n    if (option == 1) {\n      clients = this.activeInvestmentAccountsExternal.Table1;\n    } else if (option == 2) {\n      clients = JSON.parse(JSON.stringify(this.activeInvestmentAccounts.Table1));\n\n      let totalSumManaged: number = clients.map(c => c.TotalManaged).reduce((sum, current) => sum + current);\n\n      let newAccount: InvestmentAccountModel = new InvestmentAccountModel();\n      newAccount.AccountName = \"All Accounts\";\n      newAccount.TotalManaged = totalSumManaged;\n      clients.unshift(newAccount);\n    } else if (option == 3) {\n      let clientsArray1: InvestmentAccountModel[] = [];\n      let clientsArray2: InvestmentAccountModel[] = [];\n\n      clientsArray1 = JSON.parse(JSON.stringify(this.activeInvestmentAccountsExternal.Table1));\n      clientsArray2 = JSON.parse(JSON.stringify(this.activeInvestmentAccounts.Table1));\n\n      //Get distinct items from both lists\n      for (var i = 0; i < clientsArray1.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < clientsArray2.length; j++) { // j < is missed;\n          if (clientsArray1[i].AccountName == clientsArray2[j].AccountName) {\n            found = true;\n            break;\n          }\n        }\n        if (found == false) {\n          clientsArray2.push(clientsArray1[i]);\n        }\n      }\n\n      clients = clientsArray2;\n      let totalSumManaged: number = clients.map(c => c.TotalManaged).reduce((sum, current) => sum + current);\n\n      let newAccount: InvestmentAccountModel = new InvestmentAccountModel();\n      newAccount.AccountName = \"All Accounts\";\n      newAccount.TotalManaged = totalSumManaged;\n      clients.unshift(newAccount);\n\n    } else if (option == 4) {\n      clients = JSON.parse(JSON.stringify(this.activeInvestmentAccounts.Table1));\n    }\n    return clients;\n  }\n\n  public getActiveInvestmentAccountsAll(ClientID: string, ExternalSupplierOnly: boolean): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n\n      if (ExternalSupplierOnly == false) {\n        if (this.activeInvestmentAccountsLoaded == false) {\n          this.api.load('Reporting/GetActiveInvestmentAccounts', { clientID: ClientID, externalSupplierOnly: ExternalSupplierOnly }, {\n            success: result => {\n              this.activeInvestmentAccounts = result;\n              this.activeInvestmentAccountsLoaded = true;\n              resolve(true);\n            }\n          });\n        } else {\n          resolve(true);\n        }\n      } else if (ExternalSupplierOnly == true) {\n        if (this.activeInvestmentAccountsLoadedExternal == false) {\n          this.api.load('Reporting/GetActiveInvestmentAccounts', { clientID: ClientID, externalSupplierOnly: ExternalSupplierOnly }, {\n            success: result => {\n              this.activeInvestmentAccountsExternal = result;\n              this.activeInvestmentAccountsLoadedExternal = true;\n              resolve(true);\n            }\n          });\n        } else {\n          resolve(true);\n        }\n      }\n    });\n  }\n\n  public SendPasswordResetEMail(emailAddress:string): Promise<ApiRequestResult> {\n    return new Promise<ApiRequestResult>((resolve, reject) => {\n        this.api.load('Core/SendPasswordResetEMail',{email:emailAddress}, {\n          success: result => {\n            resolve(result);\n          }\n        });\n    });\n  }\n\n  public RegisterClient(idNumber:string,emailAddress:string,cellPhone:String): Promise<ApiRequestResult> {\n    return new Promise<ApiRequestResult>((resolve, reject) => {\n        this.api.load('Core/RegisterClient',{IDNumber:idNumber,EmailAddress:emailAddress,CellPhone:cellPhone}, {\n          success: result => {\n            resolve(result);\n          }\n        });\n    });\n  }\n\n  public CreateOTP(clientID:string,categoryL:number,cellNumber:String): Promise<ApiRequestResult> {\n    return new Promise<ApiRequestResult>((resolve, reject) => {\n        this.api.load('Core/CreateOTP',{ClientID:clientID,CategoryL:categoryL,CellNumber:cellNumber}, {\n          success: result => {\n            resolve(result);\n          }\n        });\n    });\n  }  \n\n  public CheckOTP(clientID:string,categoryL:number,OTP:String): Promise<ApiRequestResult> {\n    return new Promise<ApiRequestResult>((resolve, reject) => {\n        this.api.load('Core/CheckOTP',{ClientID:clientID,CategoryL:categoryL,otp:OTP}, {\n          success: result => {\n            resolve(result);\n          }\n        });\n    });\n  }  \n\n\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service'\nimport { DocumentModel } from './models/documents.model';\nimport { QuarterlyReportModel } from './models/quarterly.model';\nimport {DocumentByteModel} from './models/documentByte.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentService {\n\n  public documents: DocumentModel[] = [];\n  public DocumentDataByteArr: ByteString;\n  public annualWebReportData: any = null;\n  public annualWebReportDataLoaded: boolean = false;\n  public annualWebReport: any = null;\n  public annualWebReportLoaded: boolean = false;\n  public annualWebEACReportData: any = null;\n  public annualWebEACReportDataLoaded : boolean = false;\n  public annualWebFeeSummaryReportData: any = null;\n  public annualWebFeeSummaryReportDataLoaded : boolean = false;\n\n  public reset() {\n    this.documents = [];\n    this.DocumentDataByteArr = \"\";\n    this.annualWebReportData = null;\n    this.annualWebReportDataLoaded = false;\n    this.annualWebReport = null;\n    this.annualWebReportLoaded = false;\n    this.annualWebEACReportData = null;\n    this.annualWebEACReportDataLoaded = false;\n    this.annualWebFeeSummaryReportData = null;\n    this.annualWebFeeSummaryReportDataLoaded = false;\n  }\n\n\n  constructor(public apiServ: ApiService) { }\n\n  public getDocumentByWebCategoryByDistinctCategory(webCategoryDesc: string): DocumentModel[] {\n\n    if (this.documents.length > 0) {\n      let items: DocumentModel[] = []\n      let documentWebIndicesDesc: String[] = [];\n\n      this.documents.filter((item, idx, arr) => {\n        if (item.WebCategoryDesc == webCategoryDesc && documentWebIndicesDesc.indexOf(item.CategoryLDescription, 0) == -1) {\n          documentWebIndicesDesc.push(item.CategoryLDescription);\n          items.push(item);\n        }\n      }).sort((a, b) => {\n        if (a.CategoryLDescription != b.CategoryLDescription) {\n          return -1;\n        } else {\n          return 1;\n        };\n      });\n\n      return items;\n    } else {\n      return this.documents;\n    }\n  }\n\n  public getDocumentByWebCategoryByDistinctClient(webCategoryDesc: string): DocumentModel[] {\n\n\n    if (this.documents.length > 0) {\n      let items: DocumentModel[] = []\n      let clients: String[] = []\n\n      this.documents.filter((item, idx, arr) => {\n        if (item.WebCategoryDesc == webCategoryDesc && clients.findIndex((val, idx, arr) => item.ClientSalutation == val) == -1) {\n          clients.push(item.ClientSalutation);\n          items.push(item);\n        }\n      }).sort((a, b) => {\n        if (a.ClientSalutation != b.ClientSalutation) {\n          return -1;\n        } else {\n          return 1;\n        };\n      });\n\n      return items;\n    } else {\n      return this.documents;\n    }\n  }\n\n  public getDocumentByWebCategoryByDistinctCategoryandClient(CategoryDesc: string, partyID: string): DocumentModel[] {\n\n\n    if (this.documents.length > 0) {\n      let items: DocumentModel[] = []\n\n      this.documents.filter((item, idx, arr) => {\n        if (item.CategoryLDescription == CategoryDesc && item.PartyID == partyID) {\n          items.push(item);\n        }\n      }).sort((a, b) => {\n        if (a.DateEffective != b.DateEffective) {\n          return -1;\n        } else {\n          return 1;\n        };\n      });\n\n      return items;\n    } else {\n      return this.documents;\n    }\n  }\n\n\n  public getDocuments(PartyID: string, DateFrom?: Date, DateTo?: Date): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this.documents.length <= 0) {\n        this.apiServ.load('Reporting/getDocuments', { partyID: PartyID, dateFrom: DateFrom, dateTo: DateTo, marketingTypeID: null }, {\n          success: result => {\n            this.documents = result;\n            resolve(true);\n          }\n        });\n      } else {\n        resolve(true);\n      }\n    })\n  }\n\n  public getDocumentData(DocumentID: string): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n\n      this.apiServ.load('Reporting/GetDocumentData', { documentID: DocumentID }, {\n        success: result => {\n          this.DocumentDataByteArr = result;\n          resolve(true);\n        }\n      });\n\n    })\n  }\n\n  public openPDFDocument(name) {\n    let documentName = name + '.pdf';\n\n    if (this.DocumentDataByteArr != null) {\n      this.apiServ.download(this.DocumentDataByteArr, documentName);\n    }\n\n  }\n\n\n  public openExcelDocument(name) {\n    let documentName = name + '.xls';\n\n    if (this.DocumentDataByteArr != null) {\n      this.apiServ.download(this.DocumentDataByteArr, documentName);\n    }\n\n  }\n\n  public getValuationReport(ValuationType: number, ClientID: string, AccountID: string, DateEffective: string, CurrencyL: number, IncludeManagedOnly: boolean, IncludeRelated: boolean, IncludeShares: boolean, ExternalSupplierOnly: boolean): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.apiServ.load('Reporting/getValuationSummary', { valuationType: ValuationType, clientID: ClientID, accountID: AccountID, dateEffectiveStr: DateEffective, currencyL: CurrencyL, includeManagedOnly: IncludeManagedOnly, includeRelated: IncludeRelated, includeShares: IncludeShares, externalSupplierOnly: ExternalSupplierOnly }, {\n        success: result => {\n          resolve(result);\n        }\n      });\n\n    });\n  }\n\n  public getQuaterlyReports(AccountID: string): Promise<QuarterlyReportModel[]> {\n    return new Promise<QuarterlyReportModel[]>((resolve, reject) => {\n\n      this.apiServ.load('Reporting/getLastQuaterlyReports', { accountID: AccountID }, {\n        success: result => {\n          resolve(result);\n        }\n      });\n\n    });\n  }\n\n  public getQuaterlyReportDoc(model: QuarterlyReportModel, AccountID: string): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.apiServ.load('Reporting/getQuaterlyReportDoc', { accID: AccountID, startDateStr: model.StartDate.toDateString(), endDateStr: model.EndDate.toDateString(), isAccount: model.IsAccountID }, {\n        success: result => {\n          resolve(result);\n        }\n      });\n\n    });\n  }\n\n\n  public getPartyWebReports(ClientID: string, ReportTypeL: number): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this.annualWebReportLoaded == false) {\n        this.apiServ.load('Reporting/getPartyWebReports', { clientID: ClientID, reportTypeL: ReportTypeL }, {\n          success: result => {\n            this.annualWebReport = result;\n            this.annualWebReportLoaded = true;\n            resolve(result);\n          }\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n\n\n  public getAnnualWebReport(ClientID: string, AccountID: string, DateEffective: string): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n\n\n        this.apiServ.load('Reporting/getAnnualWebReport', { clientID: ClientID, accountID: AccountID, dateEffectiveStr: DateEffective }, {\n          success: result => {\n            this.annualWebReportData = result;\n            this.annualWebReportDataLoaded = true;\n            resolve(true);\n          }\n          \n        });\n\n    });\n  }\n\n\n\n  public getEACReport(PartyWebReportID: string): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n\n\n        this.apiServ.load('Reporting/GetEACReport', { partyWebReportID: PartyWebReportID}, {\n          success: result => {\n            this.annualWebEACReportData = result;\n            this.annualWebEACReportDataLoaded = true;\n            resolve(true);\n          }\n          \n        });\n\n    });\n  }\n\n  public getFeeSummaryReport(PartyWebReportID: string): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n        this.apiServ.load('Reporting/GetFeeSummaryReport', { partyWebReportID: PartyWebReportID}, {\n          success: result => {\n            this.annualWebFeeSummaryReportData = result;\n            this.annualWebFeeSummaryReportDataLoaded = true;\n            resolve(true);\n          }\n        });\n    });\n  }\n\n\n\n  public getFundFactSheet(FundID: number, ProductName: string): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.apiServ.post('Reporting/FundFactSheet', { fundID: FundID, productName: ProductName }).subscribe(\n        result => {\n\n        //Pass result back as any. Byte arrar cannot be stringify an parsed again to DocumentByteModel\n        //  let obj:any = JSON.stringify(result);\n        //  let model:DocumentByteModel =  JSON.parse(obj) as DocumentByteModel;\n        //  resolve(model);\n\n        resolve(result);\n        });\n    });\n\n\n\n  }\n\n\n  public getSupplierStatement(InvestmentID: string, ContractNumber: string,DateFrom:string,DateTo:string,AccountID:string,EffectiveDate:string,ProductID:number): Promise<DocumentByteModel> {\n    return new Promise<DocumentByteModel>((resolve, reject) => {\n      this.apiServ.load('Reporting/GetSupplierStatement', { investmentID: InvestmentID, contractNumber: ContractNumber,dateFrom:DateFrom,dateTo:DateTo,accountID:AccountID,effectiveDate:EffectiveDate,productID:ProductID }, {\n        success: result => {\n          resolve(result);\n        }\n      });\n\n    });\n  }\n\n\n  public getProductStatement(ProductID: string, AccountID: string,DateEffectiveStr:string): Promise<DocumentByteModel> {\n    return new Promise<DocumentByteModel>((resolve, reject) => {\n      this.apiServ.load('Reporting/GetProductStatement', { productID: ProductID, accountID: AccountID,dateEffectiveStr:DateEffectiveStr }, {\n        success: result => {\n          resolve(result);\n        }\n      });\n\n    });\n  }\n\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { AccountService } from './account.service';\nimport { ClientnotificationService } from './clientnotification.service';\nimport { CoreService } from './core.service';\nimport { DocumentService } from './document.service';\nimport { MenuService } from './menu.service';\nimport { LookupModel } from './models/lookup.models';\nimport { ClientDetails } from './models/client.model';\n\n//Mainly used to keep global state of variables\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  public htmlHomeLoaded: boolean = false;\n  public htmlHome: any;\n  public lkpSharedLanguages: LookupModel[] = [];\n  public lkpPartyTitles: LookupModel[] = [];\n  public ShowLoginOTP:boolean = false;\n  public SendLoginOTP:boolean = false;\n\n\n  public reset() {\n    this.htmlHomeLoaded = false;\n    this.htmlHome = \"\";\n    this.lkpSharedLanguages = [];\n    this.lkpPartyTitles = [];\n\n    this.SendLoginOTP = false;\n    this.ShowLoginOTP = false;\n\n    this.accServ.reset();\n    this.clientNotificationServ.reset();\n    this.coreServ.reset();\n    this.docServ.reset();\n    this.menuServ.reset();\n  }\n\n\n  constructor(private accServ: AccountService, private clientNotificationServ: ClientnotificationService, private coreServ: CoreService, private docServ: DocumentService, private menuServ: MenuService) { }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InformationService {\n\n  private subject: Subject<any> = new Subject<any>();\n  private keepAfterNavigationChange = false;\n\n  constructor (private router: Router, private ngz: NgZone) {\n    router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        if (this.keepAfterNavigationChange) {\n          this.keepAfterNavigationChange = false;\n        } else {\n          this.subject.next();\n        }\n      }\n    });\n  }\n\n  success(message: string, keepAfterNavigationChange: boolean = false) {\n    this.ngz.run(() => {\n      this.keepAfterNavigationChange = keepAfterNavigationChange;\n      this.subject.next({ type: 'success', text: message });\n    });\n  }\n  info(message: string, keepAfterNavigationChange: boolean = false) {\n    this.ngz.run(() => {\n      this.keepAfterNavigationChange = keepAfterNavigationChange;\n      this.subject.next({ type: 'info', text: message });\n    });\n  }\n  warning(message: string, keepAfterNavigationChange: boolean = false) {\n    this.ngz.run(() => {\n      this.keepAfterNavigationChange = keepAfterNavigationChange;\n      this.subject.next({ type: 'warning', text: message });\n    });\n  }\n  error(message: string, keepAfterNavigationChange: boolean = false) {\n    this.ngz.run(() => {\n      console.error(message);\n      this.keepAfterNavigationChange = keepAfterNavigationChange;\n      this.subject.next({ type: 'error', text: message });\n    });\n  }\n\n  getMessage(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MenuParams } from './models/menu-params.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n  public menuList: MenuParams[] = [];\n  public showMenu: boolean = false;\n  public breadCrumb: string = \"\";\n  public currentWebComponentL: number = 0;\n\n\n  public reset() {\n    this.menuList = [];\n    this.showMenu = false;\n    this.breadCrumb = \"\";\n    this.currentWebComponentL = 0;\n  }\n\n\n  public getMenuList(): MenuParams[] {\n    return this.menuList.filter(value => value.IsMenuItem == true && value.Level == 0);\n  }\n\n  public getMenuItem(currentWebComponentL): MenuParams {\n\n    let menuItems: MenuParams[] = this.menuList.filter(value => value.WebComponentL == currentWebComponentL);\n    if (menuItems.length > 0) {\n      return menuItems[0];\n    } else {\n      return new MenuParams();\n    }\n  }\n\n\n  public getSubMenuList(parentID: number, isMenuItem: boolean): MenuParams[] {\n    return this.menuList.filter(value => value.ParentID == parentID && value.IsMenuItem == isMenuItem);\n  }\n\n  public hasSubElements(parentID: number, isMenuItem: boolean): boolean {\n    return (this.getSubMenuList(parentID, isMenuItem).length > 0);\n  }\n\n\n\n  constructor() { }\n}\n","export class InvestmentAccountModel{\r\n    PartyID?:string;\r\n    AccountID?:string;\r\n    AccountNumber?:string;\r\n    AccountName?:string;\r\n    Total?:number;\r\n    TotalManaged?:number;\r\n    CurrencyL?:number;\r\n    CurrencyDescription?:string;\r\n    CurrencySymbol?:string;\r\n    StartDate?:Date;\r\n    IsDecisionMaker?:boolean;\r\n    IsExternal?:number;\r\n}","export class AdvisorModel{\r\n    Sharewith?:string;\r\n    PrimaryContact?:string;\r\n   // EffectiveDate?:Date;\r\n    ID:string = \"\";\r\n    // AllowChange?:boolean;\r\n    // PositionL?:number;\r\n    // StaffRole?:string;\r\n    // IsGroup?:boolean;\r\n    // UpdatedBy?:string;\r\n    // StaffEntitySharingID?:string;\r\n    // StaffAccountSharingID?:string;\r\n    // ExpiryDate?:string;\r\n    // AllowUpdate?:string;\r\n    // PartyID?:string;\r\n    // CompanyStaffRole?:string;\r\n    // KeyRolePositionL?:number;\r\n    // IsSignatory?:boolean;\r\n    // StampDate?:Date;\r\n    // StampStaffID?:number;\r\n    // CompanyID?:string;\r\n    // IsStaffDeleted?:boolean;\r\n    // EmailAddress?: string;\r\n}","\r\nexport class Client {\r\n    PartyID?: string;\r\n    EmailAddress?: string;\r\n    ClientName?: string;\r\n    isLoggedIn?: boolean;\r\n    ResultMessage?: string;\r\n    ResultAdvancedMessage?: string;\r\n}\r\n\r\n\r\nexport class ClientDetails {\r\n    public Surname: string;\r\n    public FirstNames: string;\r\n    public Initials: string;\r\n    public NickName: string;\r\n    public Title: string;\r\n    public Suffix: string;\r\n    public IDNumber: string;\r\n    public Gender: number;\r\n    public BirthDate: Date;\r\n    public BirthPlace: string;\r\n    public BirthCountry: number;\r\n    public CountryOfResidence: number;\r\n    public Nationality: number;\r\n    public MarriageDate: Date;\r\n    public EmploymentStatus: number;\r\n    public Salutation: string;\r\n    public Email: string;\r\n    public PostalAddress: string;\r\n    public PhysicalAddress: string;\r\n    public Diet: string;\r\n    public Hobbies: string;\r\n    public Language: number;\r\n\r\n    \r\n}","export class ClientNotificationModel{\r\n    PartyNotificationID?:string;\r\n    RefPartyNotificationBaseID?:string;\r\n    RefPartyNotificationID?:string;\r\n    RefPartyNotificationLevel?:number;\r\n    PartyNotificationCategoryL?:number;\r\n    PartyNotificationCategory?:string;\r\n    DateSent?:Date;\r\n    Subject?:string;\r\n    Message?:string;\r\n    PartyNotificationStatusL?:number;\r\n    PartyNotificationStatus?:string;\r\n    PartyNotificationTypeL?:number;\r\n    StampDate?:Date;\r\n    StampStaff?:string;\r\n    StampStaffID?:number;\r\n    DisclaimerRequired?:boolean;\r\n    DisclaimerAction?:string;\r\n    SharedTnCID?:string;\r\n    DisclaimerActive?:boolean;\r\n    PartyID?:string;\r\n    AnyChildStatusUnread?:boolean;\r\n}","export class MenuParams {\r\n    Description?: string;\r\n    Action?: string;\r\n    Component?: string;\r\n    Area?: string;\r\n    Level?: number;\r\n    ParentID?: number;\r\n    SortIndex?: number;\r\n    IsMenuItem?: boolean;\r\n    WebComponentL?:number;\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    \n    \n  ],\n  exports: [\n    \n   \n  ]\n})\nexport class FeaturesModule { }\n\nexport{\n  HomeComponent\n  \n}\n","<div class=\"row\" style=\"padding-top: 20px\">\n\n  <div class=\" col-lg-12 col-md-12 col-sm-12 col-xs-12\">Video Source</div>\n  <div class=\" col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n    <input type=\"text\" [(ngModel)]=\"sourceStr\" placeholder=\"Enter video source\" style=\"width:100%\" />\n  </div>\n\n  <div class=\" col-lg-4 col-md-4 col-sm-4 col-xs-4 \">Type</div>\n  <div class=\" col-lg-8 col-md-8 col-sm-8 col-xs-8\"><br></div>\n  \n  <div class=\" col-lg-4 col-md-4 col-sm-4 col-xs-4\">\n    <select [(ngModel)]=\"videoType\" style=\"width: 100%\">\n      <option *ngFor=\"let item of videoTypes\" [value]=\"item.description\">{{item.description}}</option>\n    </select>\n  </div>\n  <div class=\" col-lg-8 col-md-8 col-sm-8 col-xs-8\"><br></div>\n\n  <div class=\" col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n    <input type=\"button\" (click)=\"submitSource()\" value=\"Submit\" style=\"float:right\">\n  </div>\n  <div class=\" col-lg-12 col-md-12 col-sm-12 col-xs-12\" style=\"padding-top: 20px\">\n\n\n    <video width=\"100%\" height=\"auto\" controls (click)=\"toggleVideo($event)\" id=\"videoPlayer\">\n      <source src=\"{{videoSource}}\" type=\"{{videoType}}\"> Your browser does not support HTML5 video.\n    </video>\n\n  </div>\n</div>","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { Router, ActivatedRoute, Routes, RouterModule } from '@angular/router';\n\nexport class VideoType {\n  id: number;\n  description: string;\n}\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  @ViewChild('videoPlayer') videoplayer: any;\n  public sourceStr: string = \"https://www.youtube.com/watch?v=R7GLYhJ51uo\";\n  public videoSource: string = \"\";\n  public videoType: string = \"video/mp4\";\n  public videoTypes: VideoType[] = [];\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.videoTypes = [];\n    let video: VideoType = new VideoType();\n    video.id = 1;\n    video.description = \"video/ogg\";\n    this.videoTypes.push(video);\n\n    video = new VideoType();\n    video.id = 2;\n    video.description = \"video/mp4\";\n    this.videoTypes.push(video);\n\n    video = new VideoType();\n    video.id = 3;\n    video.description = \"video/webm\";\n    this.videoTypes.push(video);\n  }\n\n  submitSource() {\n    alert(this.sourceStr);\n    this.videoSource = this.sourceStr;\n  }\n\n\n  changeRoute(routeDesc) {\n    this.router.navigate([routeDesc]);\n  }\n\n\n\n  toggleVideo(event: any) {\n    this.videoplayer.play();\n  }\n\n\n}\n","<div *ngIf=\"menuServ.showMenu == true; then showMenuBar\">\n</div>\n<ng-template #showMenuBar>\n    <nav id=\"menu\" class=\"menu\">\n\n        <header class=\"menu-header\">\n            <span class=\"menu-header-title\">MENU</span>\n        </header>\n\n        <h3 class=\"menu-section-title\" style=\"border-bottom: solid medium;padding-bottom: 10px\">Navigation</h3>\n\n\n        <ng-template >\n\n            <ul class=\"menu-section-list\">\n                <li>\n                    <a style=\"font-family: Century Gothic\" (click)=\"changeRoute('/')\">\n                        <span style=\"padding-left:10px\">Login</span>\n                    </a>\n                </li>\n                \n            </ul>\n        </ng-template>\n\n       \n        <section class=\"menu-section\" style=\"border-top: solid medium gray;padding-top: 10px\">\n\n            <ul class=\"menu-section-list\">\n                <li>\n                    <a class=\"ico_info\" onclick='return alert(\"\"\n            + \"Generic Base App\" + \"\\n\"\n            + \"version 1.0.0\");' target=\"_blank\">\n                        <span style=\"padding-left:20px\">About</span>\n                    </a>\n                </li>\n            </ul>\n        </section>\n    </nav>\n</ng-template>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MenuService } from '../../core/menu.service'\nimport { Router, ActivatedRoute, Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  @Output() change: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private router: Router,public menuServ: MenuService) {\n  }\n\n  ngOnInit() {\n  }\n\n  changeRoute(routeDesc,breadCrumbDesc) {\n    let tempStr: string = \"\";\n    tempStr = routeDesc;\n    this.change.emit(tempStr.toLowerCase().trim());\n  }\n\n\n\n}\n","import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule, CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AppComponent } from '../app.component';\nimport { AccountService } from '../core/account.service';\nimport { MenuService } from '../core/menu.service'\n \nimport {\n  HomeComponent\n} from '../features/features.module';\n\n\n \nconst routes: Routes = [\n  \n\n  {\n    path: '',\n    component: HomeComponent,\n\n  },\n  \n  \n  \n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes, { useHash: true })\n  ],\n  exports: [RouterModule],\n  providers: []\n})\nexport class RouteRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}